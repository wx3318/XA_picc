<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.picc.dao.DamageTicketMapper">
	<insert id="saveDamageTicketList" keyProperty="id" useGeneratedKeys="true"  parameterType="java.util.List">
		INSERT INTO damage_ticket_table
		(damage_ticket_id,report_number,damage_ticket_number,damage_ticket_money,damage_time_money,damage_code,damage_name,repair_code,repair_name,repair_leve,damage_ticket_date)
		VALUES
	  	<foreach collection="damageTicketList" item="damageTicket" index="index" separator=",">
	  	(#{damageTicket.damageTicketId},#{damageTicket.reportNumber},#{damageTicket.damageTicketNumber},#{damageTicket.damageTicketMoney},#{damageTicket.damageTimeMoney},
	  	#{damageTicket.damageCode},#{damageTicket.damageName},#{damageTicket.repairCode},#{damageTicket.repairName},#{damageTicket.repairLeve},#{damageTicket.damageTicketDate})
	  	</foreach>
	</insert>
	<select id="getUserDamageList" resultType="java.util.Map" parameterType="java.util.Map">
		WITH damage_g AS (
			SELECT repair_name,
			SUM(CASE  WHEN damage_money &lt;= 10000.00 THEN damage_low_number  END ) lownumber,
			SUM(CASE  WHEN damage_money > 10000.00 THEN damage_low_number  END ) lownumbers, 
			SUM(CASE  WHEN damage_money &lt;= 10000.00 THEN damage_low_money  END ) lowmoney, 
			SUM(CASE  WHEN damage_money > 10000.00 THEN damage_low_money  END ) lowmoneys
			FROM(
			SELECT	
			repair_name,damage_low_number,damage_low_money,damage_money
			FROM `damage_low_table` AS d
			LEFT JOIN USER u ON u.username=d.damage_code
			<where>
				 d.repair_low_code IS NOT NULL AND d.repair_low_code &lt;&gt;'null'  <!-- < > -->
				 <if test="param == 1">
				 	AND DATE_FORMAT(damage_low_date, '%Y-%m') = DATE_FORMAT(#{damageDate},'%Y-%m')
				 </if>
				 <if test="param == 2">
				 	AND DATE_FORMAT(damage_low_date, '%Y') = DATE_FORMAT(#{damageDate},'%Y')
				 </if>
				 <if test="userName!=null">
		 			and d.damage_code=#{userName}
		 		</if>
		 		<if test="groupId!=null">
		 			and u.group_id=#{groupId}
		 		</if>
			</where>						
			) AS p
			GROUP BY repair_name 
		),
		damage_a AS (
			SELECT repair_name,COUNT(1) allsize,
			SUM(damage_ticket_money+damage_time_money)  allmoney,CONVERT(SUM(damage_ticket_money+damage_time_money)/COUNT(1),DECIMAL(7,2)) AS eqmoney,
		SUM(damage_ticket_money) money,SUM(damage_ticket_number) size,CONVERT(SUM(damage_ticket_number)/COUNT(1),DECIMAL(7,2)) AS eqsize,SUM(damage_time_money) timemoney,CONVERT(SUM(damage_time_money)/COUNT(1),DECIMAL(7,2) ) eqtimemoney FROM
		(
		SELECT repair_code,repair_name,repair_leve,damage_ticket_number,damage_ticket_money,damage_time_money,damage_code,group_id FROM damage_ticket_table d
		LEFT JOIN USER u ON u.username=d.damage_code	
		<where>
			<if test="param==1">
				 AND DATE_FORMAT(damage_ticket_date, '%Y-%m') = DATE_FORMAT(#{damageDate},'%Y-%m')
			</if>
			<if test="param==2">
				 AND DATE_FORMAT(damage_ticket_date, '%Y') = DATE_FORMAT(#{damageDate},'%Y')
			</if>
			<if test="money == 1">
		 		and (damage_ticket_money+damage_time_money) &gt; 10000.00 
		 	</if>	
		 	<if test="money == 2">
		 		and (damage_ticket_money+damage_time_money) &lt;= 10000.00 
		 	</if>
		 	<if test="userName!=null">
		 		and d.damage_code = #{userName}
		 	</if>
		 	<if test="groupId!=null">
		 			and u.group_id=#{groupId}
		 		</if>
		 	<if test="repair == 1">
		 		and d.repair_leve = '1'
		 	</if>
		 	<if test="repair == 0">
		 		and d.repair_leve &lt;&gt; 1
		 	</if>
		</where>
		) AS p 
		GROUP BY repair_name 	
		)
		SELECT a.repair_name,
		a.allsize,
		a.allmoney,
		b.lownumber,
		b.lowmoney,
		b.lownumbers,
		b.lowmoneys,
		a.eqmoney,
		a.money,
		a.size,
		a.eqsize,
		a.timemoney,
		a.eqtimemoney
		FROM   damage_a a
		LEFT JOIN damage_g b ON b.repair_name = a.repair_name	
	</select>
	 <select id="querySumDamage" resultType="java.util.Map" parameterType="java.util.Map" > 
	 	WITH damage_g AS ( 
		SELECT repair_name,
		SUM(damage_ticket_money+damage_time_money)  allmoney,COUNT(d.damage_ticket_money) allsize,CONVERT(SUM(damage_ticket_money+damage_time_money)/COUNT(1),DECIMAL(7,2)) AS eqmoney,SUM(damage_ticket_money) money,
		SUM(damage_ticket_number) size,CONVERT(SUM(damage_ticket_number)/COUNT(1),DECIMAL(7,2)) AS eqsize,SUM(damage_time_money) timemoney,CONVERT(SUM(damage_time_money)/COUNT(1),DECIMAL(7,2) ) eqtimemoney
		FROM 
		(
		SELECT repair_code,repair_name,repair_leve,damage_ticket_number,damage_ticket_money,damage_time_money,damage_code,group_id FROM damage_ticket_table p
		LEFT JOIN USER u ON u.username=p.damage_code	
		<where>
			<if test="param==1">
				 AND DATE_FORMAT(p.damage_ticket_date, '%Y-%m') = DATE_FORMAT(#{damageDate},'%Y-%m')
			</if>
			<if test="param==2">
				 AND DATE_FORMAT(p.damage_ticket_date, '%Y') = DATE_FORMAT(#{damageDate},'%Y')
			</if>
			<if test="money == 1">
		 		and (p.damage_ticket_money+p.damage_time_money) &gt; 10000.00 
		 	</if>	
		 	<if test="money == 2">
		 		and (p.damage_ticket_money+p.damage_time_money) &lt;= 10000.00 
		 	</if>
		 	<if test="userName!=null">
		 		and p.damage_code=#{userName}
		 	</if>
		 	<if test="groupId!=null">
		 		and u.group_id=#{groupId}
		 	</if>
		 	<if test="repair == 1">
		 		and p.repair_leve = '1'
		 	</if>
		 	<if test="repair == 0">
		 		and p.repair_leve &lt;&gt; 1
		 	</if>
		</where>
		) AS d 
	GROUP BY d.repair_name
	),
	damage_a AS (
	SELECT repair_name,
		SUM(CASE  WHEN damage_money &lt;= 10000.00 THEN damage_low_number  END ) lownumber,
		SUM(CASE  WHEN damage_money > 10000.00 THEN damage_low_number  END ) lownumbers, 
		SUM(CASE  WHEN damage_money &lt;= 10000.00 THEN damage_low_money  END ) lowmoney, 
		SUM(CASE  WHEN damage_money > 10000.00 THEN damage_low_money  END ) lowmoneys
		FROM(
		SELECT	
		repair_name,damage_low_number,damage_low_money,damage_money
		FROM `damage_low_table` AS d
		LEFT JOIN USER u ON u.username=d.damage_code
		<where>
				 d.repair_low_code IS NOT NULL AND d.repair_low_code &lt;&gt;'null'  <!-- < > -->
				 <if test="param == 1">
				 	AND DATE_FORMAT(d.damage_low_date, '%Y-%m') = DATE_FORMAT(#{damageDate},'%Y-%m')
				 </if>
				 <if test="param == 2">
				 	AND DATE_FORMAT(d.damage_low_date, '%Y') = DATE_FORMAT(#{damageDate},'%Y')
				 </if>
				 <if test="userName!=null">
		 			and d.damage_code=#{userName}
		 		</if>
		 		<if test="groupId!=null">
		 			and u.group_id=#{groupId}
		 		</if>
			</where>
		) AS pending_group_case
	GROUP BY repair_name
	)
	SELECT SUM(a.allsize) allsize,
		SUM(a.allmoney) allmoney,
		SUM(b.lownumber) lownumber,
		SUM(b.lowmoney) lowmoney,
		SUM(b.lownumbers) lownumbers,
		SUM(b.lowmoneys) lowmoneys,
		SUM(a.eqmoney) eqmoney,
		SUM(a.money) money,
		SUM(a.size) size,
		SUM(a.eqsize) eqsize,
		SUM(a.timemoney) timemoney,
		SUM(a.eqtimemoney) eqtimemoney
		FROM   damage_g a
		LEFT JOIN damage_a b ON b.repair_name = a.repair_name

	 </select>
</mapper>