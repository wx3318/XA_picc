<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch=" http://www.springframework.org/schema/batch" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd" default-autowire="byName">
	<!--  自动扫描-->
 	<context:annotation-config></context:annotation-config>
 	<context:component-scan base-package="com.picc.service.impl" />
 	
 	
	<!-- 引入配置文件  -->
    <context:property-placeholder location="classpath:mysqljdbc.properties" ignore-unresolvable="true"/>  
 
    <!-- 1.配置数据源 -->
    <bean id="sqlServerDataSource" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
	  <property name="driverClassName" value="${sqlserver.driver}" />
		<property name="url" value="${sqlserver.url}" />
		<property name="username" value="${sqlserver.username}" />
		<property name="password" value="${sqlserver.password}" /> 		
	     <!--初始化连接大小 -->
		 <property name="initialSize" value="${jdbc.initialSize}" />
		<!--连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}" /> 
		<!--连接池最大使用链接数量 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		
		<!--配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" /> 
	</bean>
	
    <bean id="mySqlDataSource" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
	  <property name="driverClassName" value="${mysql.driver}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" /> 		
	     <!--初始化连接大小 -->
		 <property name="initialSize" value="${jdbc.initialSize}" />
		<!--连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}" /> 
		<!--连接池最大使用链接数量 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		
		<!--配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" /> 
	</bean>
	
	<bean id="dataSource" class="com.picc.common.DynamicDataSource"><!--注意： 这里写选择数据源的类地址 下面跟着给出-->
        <property name="defaultTargetDataSource" ref="mySqlDataSource"/><!-- 设置默认为此mySqlDataSource数据源-->
        <property name="targetDataSources">
            <map>
                <entry key="mySqlDataSource" value-ref="mySqlDataSource"/>
                <entry key="sqlServerDataSource" value-ref="sqlServerDataSource"/>
            </map>
        </property>
    </bean>
    
	 <!--2.Mybatis的sqlSessionFactory  -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- spring和mybatis的完美整合，不需要mybatis的配置文件 -->
        
        <!--  <property name="configLocation" value="classpath:config/mybatisConfig.xml"></property> -->
        <!-- 自动扫描mapping映射文件，
             classpath：只能加载找到的第一个文件
             classpath*：能加载路径下多个资源文件
             -->  
        <property name="mapperLocations" value="classpath*:com/picc/mapper/*.xml"></property>
        
         <!-- 分页插件 pagehelper -->
		    <property name="plugins">
		        <array>
		            <bean class="com.github.pagehelper.PageInterceptor">
		                <property name="properties">
		                    <!--使用下面的方式配置参数，一行配置一个 -->
		                    <value>
		                          helperDialect=postgresql
		                          reasonable=true
		                          supportMethodsArguments=true
		                          params=count=countSql
		                          autoRuntimeDialect=true
		                    </value>
		                </property>
		            </bean>
		        </array>
		    </property>
    </bean>
	<!-- mybatis自动扫描器，加载sql映射文件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 
        basePackage：指定sql映射文件所在的包 
        -->
        <property name="basePackage" value="com.picc.dao"></property>
        <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property> -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
    </bean>
    
      <!--慢SQL记录统计 start-->
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <!--慢SQL统计，如果SQL执行时间超过一定时间则记录为慢SQL  1秒-->
        <property name="slowSqlMillis" value="1000" />
        <!--慢SQL统计日志输出  -->
        <property name="logSlowSql" value="true" />
        <!--合并SQL统计 例如select * from table t where t.id =1，会被变为select * from table t where t.id =？来统计  -->
        <property name="mergeSql" value="true" />
    </bean>
    
     <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
         <property name="resultSetLogEnabled" value="false" />
         <property name="statementExecutableSqlLogEnable" value="true" />
    </bean>

  <!-- 防SQL注入攻击 -->
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="config" ref="wall-config" />
    </bean>
    <!-- 执行多条sql -->
    <bean id="wall-config" class="com.alibaba.druid.wall.WallConfig">
        <!-- 允许一次执行多条语句 -->
        <property name="multiStatementAllow" value="true" />
        <!-- 允许语句中存在注释 -->
        <property name="commentAllow" value="true" />
        <!-- 检查UPDATE语句是否无where条件 -->
        <property name="updateWhereNoneCheck" value="true" />
        <!-- 检查DELETE语句是否无where条件 -->
        <property name="deleteWhereNoneCheck" value="true" />
    </bean>
 	
	 <!-- 配置任务类,也就是下面WorkTimeUtilSch所在的类 -->
    <bean id="myJob" class="com.picc.util.WorkTimeUtilSch" />  
      <!--  配置job -->
     <!-- 6-10续保考勤 -->
    <bean id="saveAddressOneStart"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>saveAddressOneStart</value>
        </property>
    </bean>
    <bean id="updateAddressOneAfter"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressOneAfter</value>
        </property>
    </bean>
    
     <bean id="updateAddressOneEnd"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressOneEnd</value>
        </property>
    </bean>
    <!-- 转续保 考勤 -->
    <bean id="saveAddressTwoStart"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>saveAddressTwoStart</value>
        </property>
    </bean>
    <bean id="updateAddressTwoAfter"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressTwoAfter</value>
        </property>
    </bean>
    <bean id="updateAddressTwoEnd"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressTwoEnd</value>
        </property>
    </bean> 
    <!-- 新兵营 考勤 -->
    <bean id="saveAddressThreeStart"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>saveAddressThreeStart</value>
        </property>
    </bean>
     <bean id="updateAddressThreeAfter"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressThreeAfter</value>
        </property>
    </bean>
    <bean id="updateAddressThreeEnd"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressThreeEnd</value>
        </property>
    </bean>
     <!--内勤  考勤机-->
    <bean id="saveAddressFourStart"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>saveAddressFourStart</value>
        </property>
    </bean>
     <bean id="updateAddressFourAfter"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressFourAfter</value>
        </property>
    </bean>
    <bean id="updateAddressFourEnd"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressFourEnd</value>
        </property>
    </bean>
    <!--续保1-5  考勤机-->
    <bean id="saveAddressFiveStart"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>saveAddressFiveStart</value>
        </property>
    </bean>
     <bean id="updateAddressFiveAfter"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressFiveAfter</value>
        </property>
    </bean>
    <bean id="updateAddressFiveEnd"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="concurrent" value="false"/>
        <property name="targetMethod">
            <value>updateAddressFiveEnd</value>
        </property>
    </bean>
   <!-- 配置触发器 -->
      
    <bean id="crontestJobTriggerOnes" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="saveAddressOneStart" />
        </property>
        <property name="cronExpression">
            <value>0 5 9 * * ?</value><!--  每天九点 0 10 9 * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerTwos" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="saveAddressTwoStart" />
        </property>
        <property name="cronExpression">
            <value>0 6 9 * * ?</value><!--  每天九点零五 0 12 9 * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerThrees" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="saveAddressThreeStart" />
        </property>
        <property name="cronExpression">
            <value>0 7 9 * * ?</value><!--  每天九点零五 0 18 9 * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerFours" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="saveAddressFourStart" />
        </property>
        <property name="cronExpression">
            <value>0 8 9 * * ?</value><!--  每天九点零五 0 14 9 * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerFives" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="saveAddressFiveStart" />
        </property>
        <property name="cronExpression">
            <value>0 9 9 * * ?</value><!--  每天九点零五 0 16 9 * * ?-->
        </property>
    </bean>
    
    
    <bean id="crontestJobTriggerOnea" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressOneAfter" />
        </property>
        <property name="cronExpression">
            <value>0 30 14 * * ?</value><!--  每天九点 0 30 14 * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerTwoa" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressTwoAfter" />
        </property>
        <property name="cronExpression">
            <value>0 32 14 * * ?</value><!--  每天九点零五 0 32 14  * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerThreea" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressThreeAfter" />
        </property>
        <property name="cronExpression">
            <value>0 38 14 * * ?</value><!--  每天九点零五 0 35 14 * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerFoura" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressFourAfter" />
        </property>
        <property name="cronExpression">
            <value>0 34 14 * * ?</value><!--  每天九点零五 0 37 14 * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerFivea" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressFiveAfter" />
        </property>
        <property name="cronExpression">
            <value>0 36 14 * * ?</value><!--  每天九点零五 0 40 14 * * ?-->
        </property>
    </bean>
    
    <!--  昨天修改-->
    <bean id="crontestJobTriggerOned" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressOneEnd" />
        </property>
        <property name="cronExpression">
            <value>0 45 8 * * ?</value><!-- 每天7点5  0 30 7 * * ? || 0 */5 * * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerTwod" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressTwoEnd" />
        </property>
        <property name="cronExpression">
            <value>0 46 8 * * ?</value><!-- 每天7点7  0 32 7 * * ? || 0 */5 * * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerThreed" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressThreeEnd" />
        </property>
        <property name="cronExpression">
            <value>0 47 8 * * ?</value><!-- 每天7点10  0 34 7 * * ? || 0 */5 * * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerFourd" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressFourEnd" />
        </property>
        <property name="cronExpression">
            <value>0 48 7 * * ?</value><!-- 每天7点10  0 48 7 * * ? || 0 */5 * * * ?-->
        </property>
    </bean>
    <bean id="crontestJobTriggerFived" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAddressFiveEnd" />
        </property>
        <property name="cronExpression">
            <value>0 46 7 * * ?</value><!-- 每天7点10  0 46 7 * * ? || 0 */5 * * * ?-->
        </property>
    </bean>
    
    <bean name="schedulerFactoryBean" lazy-init="false" autowire="no"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>           
                <ref bean="crontestJobTriggerOnes" />
                <ref bean="crontestJobTriggerOnea" />
                <ref bean="crontestJobTriggerOned" />
                <ref bean="crontestJobTriggerTwos" />
                <ref bean="crontestJobTriggerTwoa" />
                <ref bean="crontestJobTriggerTwod" />
                <ref bean="crontestJobTriggerThrees" />
                <ref bean="crontestJobTriggerThreea" />
                <ref bean="crontestJobTriggerThreed" />
                <ref bean="crontestJobTriggerFours" />
                <ref bean="crontestJobTriggerFoura" />
                <ref bean="crontestJobTriggerFourd" />
                <ref bean="crontestJobTriggerFives" />
                <ref bean="crontestJobTriggerFivea" /> 
                <ref bean="crontestJobTriggerFived" />                           
            </list>
        </property>
    </bean>    
    
    <!-- 事务管理 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mySqlDataSource"></property>
    </bean>
    
      <!-- 使用声明式事务 -->

</beans>

