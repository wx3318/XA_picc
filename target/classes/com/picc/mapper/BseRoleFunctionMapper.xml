<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.picc.dao.BseRoleFunctionMapper">
  <resultMap id="BaseResultMap" type="com.picc.entity.BseRoleFunction">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="function_id" jdbcType="INTEGER" property="functionId" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="created_name" jdbcType="VARCHAR" property="createdName" />
    <result column="created_id" jdbcType="INTEGER" property="createdId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, function_id, created_date, created_name, created_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bse_role_function
    where id = #{id,jdbcType=INTEGER}
  </select>
  
    <select id="selectByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bse_role_function
    where role_id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bse_role_function
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByRoleId" parameterType="java.lang.Integer">
    delete from bse_role_function
    where role_id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.picc.entity.BseRoleFunction">
    insert into bse_role_function (id, role_id, function_id, 
      created_date, created_name, created_id
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{functionId,jdbcType=INTEGER}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{createdName,jdbcType=VARCHAR}, #{createdId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.picc.entity.BseRoleFunction">
    insert into bse_role_function
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="functionId != null">
        function_id,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="createdName != null">
        created_name,
      </if>
      <if test="createdId != null">
        created_id,
      </if>
    
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="functionId != null">
        #{functionId,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdName != null">
        #{createdName,jdbcType=VARCHAR},
      </if>
      <if test="createdId != null">
        #{createdId,jdbcType=INTEGER},
      </if>
    
    </trim>
  </insert>
  
      <insert id="insertRoleFunctionList" parameterType="java.util.List">
        insert into bse_role_function (role_id, function_id, created_date, created_name, created_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.roleId,jdbcType=INTEGER}, #{item.functionId,jdbcType=INTEGER},#{item.createdDate,jdbcType=TIMESTAMP},
            #{item.createdName,jdbcType=VARCHAR} ,#{item.createdId,jdbcType=INTEGER})
        </foreach>
    </insert>
    
  <update id="updateByPrimaryKeySelective" parameterType="com.picc.entity.BseRoleFunction">
    update bse_role_function
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="functionId != null">
        function_id = #{functionId,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdName != null">
        created_name = #{createdName,jdbcType=VARCHAR},
      </if>
      <if test="createdId != null">
        created_id = #{createdId,jdbcType=INTEGER},
      </if>
    
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.picc.entity.BseRoleFunction">
    update bse_role_function
    set role_id = #{roleId,jdbcType=INTEGER},
      function_id = #{functionId,jdbcType=INTEGER},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      created_name = #{createdName,jdbcType=VARCHAR},
      created_id = #{createdId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>