<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.picc.dao.UserCaseMapper">
	<resultMap type="com.picc.entity.UserCase" id="UserCaseMap">
		<result column="id" property="id"/>
          <result column="group_name" property="groupName" />
          <result column="name"  property="userName"/>
          <result column="create_date"  property="createDate"/>
          <result column="starting_number"  property="startingNumber"/>
          <result column="start_target_number"  property="startTargetNumber"/>
          <result column="budget_target_number" property="budgetTargetNumber"/>
          <result column="challeng_number"  property="challengNumber"/>

	</resultMap>
	<insert id="saveUserCase" keyProperty="id" useGeneratedKeys="true" parameterType="com.picc.entity.UserCase">
		insert into pending_group_user_case
		 <trim prefix="(" suffix=")" suffixOverrides=",">
		      <if test="groupId != null  and groupId !=''">
		        group_id,
		      </if>
		      <if test="userId != null  and userId !=''">
		        username,
		      </if>
		      <if test="startingNumber != null and startingNumber !=''">
		        starting_number,
		      </if>
		      <if test="startTargetNumber != null and startTargetNumber !=''">
		        start_target_number,
		      </if>
		      <if test="budgetTargetNumber != null and budgetTargetNumber !=''">
		        budget_target_number,
		      </if>
		      <if test="challengNumber != null and challengNumber !=''">
		        challeng_number,
		      </if>
		      <if test="createDate != null">
		        create_date,
		      </if>			      
		    </trim>
		    <trim prefix="values (" suffix=")" suffixOverrides=",">
		     <if test="groupId != null  and groupId !=''">
		        #{groupId},
		      </if>
		      <if test="userId != null  and userId !=''">
		        #{userId},
		      </if>
		      <if test="startingNumber != null and startingNumber !=''">
		        #{startingNumber},
		      </if>
		      <if test="startTargetNumber != null and startTargetNumber !=''">
		        #{startTargetNumber},
		      </if>
		      <if test="budgetTargetNumber != null and budgetTargetNumber !=''">
		        #{budgetTargetNumber},
		      </if>
		      <if test="challengNumber != null and challengNumber !=''">
		        #{challengNumber},
		      </if>
		      <if test="createDate != null">
		        #{createDate , jdbcType=DATE},
		      </if>
		    </trim>
	</insert>	       
	<select id="getUserCaseListByParam" resultType="java.util.Map" parameterType="com.picc.entity.UserCase">
		SELECT p.id,g.group_name,u.name,p.create_date,p.starting_number,p.start_target_number,p.budget_target_number,p.challeng_number FROM pending_group_user_case AS p 
		LEFT JOIN USER AS u ON u.username = p.username
		LEFT JOIN group_p AS g ON p.group_id = g.id 
		<where>
			<if test="groupId != null  and groupId !=''">
		        p.group_id = #{groupId}
		     </if>
		</where>	
	</select>       
	<select id="getUserCaseById" resultMap="UserCaseMap" parameterType="com.picc.entity.UserCase">
		SELECT p.id,g.group_name,u.name,p.create_date,p.starting_number,p.start_target_number,p.budget_target_number,p.challeng_number FROM pending_group_user_case AS p 
		LEFT JOIN USER AS u ON u.username = p.username
		LEFT JOIN group_p AS g ON p.group_id = g.id
		<where>
			<if test="id != null ">
		        p.id = #{id}
		     </if>
		</where>
	</select> 
	<update id="updateUserCase" parameterType="com.picc.entity.UserCase">
		UPDATE pending_group_user_case p
		SET p.starting_number=#{startingNumber},
			p.start_target_number= #{startTargetNumber},
			p.budget_target_number= #{budgetTargetNumber},
			p.challeng_number= #{challengNumber},
			p.update_date= #{updateDate , jdbcType=DATE}
		WHERE p.id=#{id}
	</update>     
	<delete id="deleteUserCaseById" parameterType="com.picc.entity.UserCase">
		DELETE FROM pending_group_user_case 
		WHERE 
		id=#{id}
	</delete> 
	<select id="getMonthUserCase" resultType="java.util.Map" parameterType="com.picc.entity.UserCase" >
		WITH  all_case AS  
				(
					SELECT COUNT(*) AS endAllCase,user_info FROM pending_table WHERE group_id=#{groupId} AND case_station = 4  
					<if test="startDate!=null and endDate!=null">
					   AND  update_date <![CDATA[>=]]> #{startDate} AND update_date <![CDATA[<=]]> #{endDate}
					</if>
					<if test="startDate == null or endDate ==null">
					 	AND DATE_FORMAT(update_date, '%Y-%m') = DATE_FORMAT(#{createDate}, '%Y-%m') 
					</if>
					GROUP BY user_info 
				), 
					monthend_case AS 
				(
					SELECT COUNT(*) AS allNewCase ,user_info FROM pending_table WHERE group_id=#{groupId} AND case_station &lt;&gt; 4 
					AND ( create_date <![CDATA[<=]]> #{createDate} OR create_date is NULL)
					 GROUP BY user_info 
				), 
					day_case AS 
				(
					SELECT COUNT(*) AS dayNewCase ,user_info FROM pending_table WHERE group_id=#{groupId} AND case_station &lt;&gt; 4  AND create_date=#{createDate} GROUP BY user_info 
				), 
					day_cased AS 
				(
					SELECT COUNT(*) AS dayEndCase ,user_info FROM pending_table WHERE group_id=#{groupId} AND case_station = 4  AND update_date=#{createDate} GROUP BY user_info 
				)	
				SELECT 
					g.group_name,
					a.NAME,
					s.username,
					s.starting_number,
					d.dayNewCase,
					e.dayEndCase,
					b.endAllCase,
					c.allNewCase,
					s.start_target_number,
					(c.allNewCase-s.start_target_number) AS diffstart,
					s.budget_target_number,
					(c.allNewCase-s.budget_target_number) AS diffbudget,
					s.challeng_number,
					(c.allNewCase-s.challeng_number) AS diffchalleng
				FROM pending_group_user_case AS s
				LEFT JOIN  USER AS a ON s.username=a.username	 
				LEFT JOIN  day_case AS d ON s.username=d.user_info
				LEFT JOIN  day_cased AS e ON s.username=e.user_info	
				LEFT JOIN  all_case AS b  ON s.username = b.user_info
				LEFT JOIN  monthend_case c ON c.user_info = s.username
				LEFT JOIN group_p g ON s.group_id = g.id  
				<where>
					DATE_FORMAT(s.create_date, '%Y-%m') = DATE_FORMAT(#{createDate}, '%Y-%m') 
					<if test="groupId!=null">
					and	s.group_id=#{groupId}
					</if>				
				</where>
				order by diffstart	
	</select>
</mapper>