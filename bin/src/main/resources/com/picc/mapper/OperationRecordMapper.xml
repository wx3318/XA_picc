<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.picc.dao.OperationRecordMapper">
  <resultMap id="BaseResultMap" type="com.picc.entity.OperationRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="created_name" jdbcType="VARCHAR" property="createdName" />
    <result column="created_id" jdbcType="INTEGER" property="createdId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, type, created_date, created_name, created_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List"/>
    from operation_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <!-- 获取符合查询条件的操作记录列表 -->
  <select id="queryRecordsList" resultType="java.util.Map" parameterType="com.picc.entity.OperationRecord">
    select
	   id,
	   content,
	   type,
	   created_date AS createdDate,
	   created_name AS createdName
    from operation_record
    <include refid="queryParams"/>
    ORDER BY created_date DESC
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operation_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.picc.entity.OperationRecord">
    insert into operation_record (id, content, type, 
      created_date, created_name, created_id
      )
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{createdName,jdbcType=VARCHAR}, #{createdId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.picc.entity.OperationRecord">
    insert into operation_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="createdName != null">
        created_name,
      </if>
      <if test="createdId != null">
        created_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdName != null">
        #{createdName,jdbcType=VARCHAR},
      </if>
      <if test="createdId != null">
        #{createdId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.picc.entity.OperationRecord">
    update operation_record
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdName != null">
        created_name = #{createdName,jdbcType=VARCHAR},
      </if>
      <if test="createdId != null">
        created_id = #{createdId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.picc.entity.OperationRecord">
    update operation_record
    set content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      created_name = #{createdName,jdbcType=VARCHAR},
      created_id = #{createdId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!--查询条件-->
  <sql id="queryParams">
    <trim prefix="where" prefixOverrides="and | or ">
    
         <if test="createdName != null &amp;&amp; createdName != ''">
	        and created_name like  concat('%',#{createdName,jdbcType=VARCHAR},'%')  
	      </if>
	      
	       <if test="content != null &amp;&amp; content != ''">
	        and content like  concat('%',#{content,jdbcType=VARCHAR},'%')  
	      </if>
	      
	      
	      <if test="createdId != null &amp;&amp; createdId != ''">
	        and created_id = #{createdId, jdbcType=BIGINT}
	      </if>
    </trim>
  </sql>
  
</mapper>